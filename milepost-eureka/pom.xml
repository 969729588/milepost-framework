<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.milepost</groupId>
		<artifactId>milepost-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath/>
	</parent>

	<!--坐标中没指定的则继承父工程-->
	<artifactId>milepost-eureka</artifactId>
	<version>1.0.0.100</version><!--1.0.0是应用版本，100是框架版本-->
	<packaging>jar</packaging>
	<name>milepost-eureka</name>
	<description>注册中心</description>
	<!--
	继承milepost-parent，
	依赖milepost-log，
	其余的都自己管理，不需要指定依赖的版本，继承自milepost-parent。
	-->

	<dependencies>

		<!--单元测试-->
		<dependency>
			<groupId>com.milepost</groupId>
			<artifactId>milepost-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.milepost</groupId>
			<artifactId>milepost-log</artifactId>
		</dependency>

		<dependency>
			<groupId>com.milepost</groupId>
			<artifactId>milepost-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!--支持springboot的http 监控端点-->
		<dependency>
			<groupId>org.springframework.hateoas</groupId>
			<artifactId>spring-hateoas</artifactId>
		</dependency>

		<!--为了测试默认属性增加的依赖-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!--打包时候copy脚本，包括Linux启动脚本，docker相关脚本等-->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!--打包时候复制文件-->
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<!--读取打包到target里-->
							<outputDirectory>${basedir}/target</outputDirectory>
							<resources>
								<resource>
									<!--指定目录-->
									<directory>${basedir}</directory>
									<includes>
										<!--所有的sh文件。-->
										<include>**/*.sh</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
