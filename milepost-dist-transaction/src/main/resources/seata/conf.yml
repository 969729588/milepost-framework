# 使用yml配置seata有一下两个bug
# 1、undo相关配置不生效（估计seata.client.rm.lock相关属性也有类似问题），解决：我们不更改这些配置就可以了，
# 2、service.disable-global-transaction不生效，解决：在类路径下放一个file.conf，里面只配置service.disable-global-transaction。

seata.enabled: true
#seata.application-id: tx-client-service-a

# 事务群组（可以每个应用独立取名，也可以使用相同的名字）
seata.tx-service-group: default

#client
seata.client.rm-report-success-enable: true
# 自动刷新缓存中的表结构（默认false）
seata.client.rm-table-meta-check-enable: false
# 一阶段结果上报TC重试次数（默认5）
seata.client.rm-report-retry-count: 5
# 异步提交缓存队列长度（默认10000）
seata.client.rm-async-commit-buffer-limit: 10000
# 校验或占用全局锁重试间隔（默认10ms）
seata.client.rm.lock.lock-retry-interval: 10
# 校验或占用全局锁重试次数（默认30）
seata.client.rm.lock.lock-retry-times: 30
# 分支事务与其它全局回滚事务冲突时锁策略（优先释放本地锁让回滚成功）
seata.client.rm.lock.lock-retry-policy-branch-rollback-on-conflict: true
# 一阶段全局提交结果上报TC重试次数（默认1次，建议大于1）
seata.client.tm-commit-retry-count: 5
# 一阶段全局回滚结果上报TC重试次数（默认1次，建议大于1）
seata.client.tm-rollback-retry-count: 5
# 二阶段回滚镜像校验（默认true开启）
seata.client.undo.undo-data-validation: true
# undo序列化方式（默认jackson）
seata.client.undo.undo-log-serialization: jackson
# 自定义undo表名（默认undo_log）
seata.client.undo.undo-log-table: undo_log
# 日志异常输出概率（默认100）
seata.client.log.exceptionRate: 100
# auto proxy the DataSource bean，必须设置成true，否则不能生成undo_log，也不能回滚，
seata.client.support.spring.datasource-autoproxy: true

#service
# TC 集群（必须与seata-server保持一致）
seata.service.vgroup-mapping: tx-server
# 降级开关
seata.service.enable-degrade: false
# 禁用全局事务（默认false）
seata.service.disable-global-transaction: false
#only support when registry.type=file, please don't set multiple addresses
#seata.service.grouplist: 127.0.0.1:8091

#transport
# when destroy server, wait seconds
seata.transport.shutdown.wait: 3

#thread factory for netty
seata.transport.thread-factory.boss-thread-prefix: NettyBoss
seata.transport.thread-factory.worker-thread-prefix: NettyServerNIOWorker
seata.transport.thread-factory.server-executor-thread-prefix: NettyServerBizHandler
seata.transport.thread-factory.share-boss-worker: false
seata.transport.thread-factory.client-selector-thread-prefix: NettyClientSelector
seata.transport.thread-factory.client-selector-thread-size: 1
seata.transport.thread-factory.client-worker-thread-prefix: NettyClientWorkerThread
# netty boss thread size,will not be used for UDT
seata.transport.thread-factory.boss-thread-size: 1
#auto default pin or 8
seata.transport.thread-factory.worker-thread-size: 8
# tcp udt unix-domain-socket
seata.transport.type: TCP
#NIO NATIVE
seata.transport.server: NIO
#enable heartbeat
seata.transport.heartbeat: true
seata.transport.serialization: seata
seata.transport.compressor: none
# the client batch send request enable
seata.transport.enable-client-batch-send-request: true # 客户端事务消息请求是否批量合并发送（默认true）

#registry
seata.registry.type: eureka
seata.registry.eureka.service-url: ${eureka.client.service-url.default-zone}
