<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.milepost</groupId>
    <artifactId>milepost-parent</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <description>框架父工程</description>
    <!--
    只用来被其他pom继承的，里面不包含子模块，
    整个框架的依赖版本管理，使用里面的dependencies和dependencyManagement，
    所有应用都继承这个pom，所以，将所有应用都需要的依赖写在dependencies中，
    类比iplatform-parent和iplatform-dependencies。
    区别是milepost继承了spring-boot-starter-parent，
    而iplatform没继承任何pom，他是自己写的版本匹配。

    如果有Nexus私服则将这个上传到Nexus，否则运行idea的install命令，
    其安装到自己本地的maven仓库中，然后就可以在其他项目中引用了。
    -->

    <!--继承spring boot-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.0.RELEASE</version>
        <relativePath/>
    </parent>

    <!--properties，框架所有的properties都在这里指定-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
        <spring-boot.version>2.1.0.RELEASE</spring-boot.version>
        <milepost.version>1.0.0-SNAPSHOT</milepost.version>
        <txlcn.version>5.0.2.RELEASE</txlcn.version>
        <jasypt.version>3.0.1</jasypt.version>
        <poi.version>3.14</poi.version>
    </properties>

    <dependencies>
        <!--写在这里的依赖，子模块默认引用了这些依赖-->
        <!--最好不要在这里面写依赖，最好都写在dependencyManagement中，
        子模块在使用是给出groupId和artifactId即可，把依赖写在这里容易导致循环依赖，
        也增加了耦合性-->
    </dependencies>

    <dependencyManagement>
        <!--写在这里的依赖，子模块在需要时只需要指定groupId、artifactId，不需要指定版本。-->
        <dependencies>

            <!-- milepost -->
            <dependency>
                <groupId>com.milepost</groupId>
                <artifactId>milepost-test</artifactId>
                <version>${milepost.version}</version>
            </dependency>
            <dependency>
                <groupId>com.milepost</groupId>
                <artifactId>milepost-api</artifactId>
                <version>${milepost.version}</version>
            </dependency>
            <dependency>
                <groupId>com.milepost</groupId>
                <artifactId>milepost-log</artifactId>
                <version>${milepost.version}</version>
            </dependency>
            <dependency>
                <groupId>com.milepost</groupId>
                <artifactId>milepost-core</artifactId>
                <version>${milepost.version}</version>
            </dependency>
            <dependency>
                <groupId>com.milepost</groupId>
                <artifactId>milepost-ui</artifactId>
                <version>${milepost.version}</version>
            </dependency>
            <dependency>
                <groupId>com.milepost</groupId>
                <artifactId>milepost-service</artifactId>
                <version>${milepost.version}</version>
            </dependency>
            <dependency>
                <groupId>com.milepost</groupId>
                <artifactId>milepost-mybatis-generator</artifactId>
                <version>${milepost.version}</version>
            </dependency>

            <!--TX-LCN-->
            <!--管理端(只用于开发环境友好的启动管理端，生产环境要用源码编译出来的jar包)-->
            <dependency>
                <groupId>com.codingapi.txlcn</groupId>
                <artifactId>txlcn-tm</artifactId>
                <version>${txlcn.version}</version>
            </dependency>
            <!--客户端-->
            <dependency>
                <groupId>com.codingapi.txlcn</groupId>
                <artifactId>txlcn-tc</artifactId>
                <version>${txlcn.version}</version>
                <exclusions>
                    <!--使用jsqlparser:1.3，排除后使用milepost的2.0的-->
                    <exclusion>
                        <groupId>com.github.jsqlparser</groupId>
                        <artifactId>jsqlparser</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.codingapi.txlcn</groupId>
                <artifactId>txlcn-txmsg-netty</artifactId>
                <version>${txlcn.version}</version>
            </dependency>

            <!--spring cloud-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- OauthServer-->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-jwt</artifactId>
                <version>1.0.9.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security.oauth</groupId>
                <artifactId>spring-security-oauth2</artifactId>
                <version>2.3.4.RELEASE</version>
            </dependency>

            <!--test-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
            </dependency>

            <!--配置文件加密-->
            <!--jasypt，https://github.com/ulisesbocchio/jasypt-spring-boot
                去https://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html
                下载支持jar包，放到D:\JavaSoftware\Java8\jdk1.8.0_144\jre\lib\security中，
                覆盖掉原有的jar包，否则报
                A possible cause is you are using strong encryption algorithms and you have not installed the Java ...-->
            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${jasypt.version}</version>
            </dependency>

            <!--commons -->
            <!--spring-cloud-starter-openfeign依赖了这个-->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.2</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.6</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>1.19</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>1.9.4</version>
            </dependency>


            <!-- 压缩文件，比commons-compress好用 -->
            <dependency>
                <groupId>net.lingala.zip4j</groupId>
                <artifactId>zip4j</artifactId>
                <version>1.3.2</version>
            </dependency>

            <!--MyBatis，这个starter是mybatis自己写的，不是springboot提供的-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>2.1.1</version>
            </dependency>
            <!--ehcache缓存-->
            <dependency>
                <groupId>org.mybatis.caches</groupId>
                <artifactId>mybatis-ehcache</artifactId>
                <version>1.1.0</version>
            </dependency>
            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache-core</artifactId>
                <version>2.6.8</version>
            </dependency>
            <!-- mybatis代码生成器 -->
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>1.3.2</version>
            </dependency>
            <!-- mbg实现动态改变配置文件 -->
            <dependency>
                <groupId>org.dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>2.0.0</version>
            </dependency>
            <!--pagehelper分页插件，不是被springboot管理的-->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>5.1.11</version>
            </dependency>

            <!--swagger-->
           <!--spring-boot-starter-swagger，不是springboot提供的starter
                https://github.com/SpringForAll/spring-boot-starter-swagger
            -->
            <dependency>
                <groupId>com.spring4all</groupId>
                <artifactId>swagger-spring-boot-starter</artifactId>
                <version>1.9.1.RELEASE</version>
            </dependency>

            <!--fastjson-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>1.2.62</version>
            </dependency>

            <!-- poi -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>

            <!-- qrCode -->
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>core</artifactId>
                <version>3.3.2</version>
            </dependency>
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>javase</artifactId>
                <version>3.0.0</version>
            </dependency>

            <!-- Java HTML Parser，官网在https://jsoup.org/，中文版的在这http://www.open-open.com/jsoup/ -->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>1.11.3</version>
            </dependency>

            <!--oracle-->
            <!--
            由于版权问题，在中央仓库是没有oracle的jdbc驱动的，可以手动下载到本地或者在oracle安装目录的jdbc目录中找到对应的jar，然后通过以下命令安装到本地仓库
            mvn install:install-file -DgroupId=com.oracle -DartifactId=my-ojdbc6 -Dversion=12.1.0.2 -Dpackaging=jar -Dfile=F:\maven\repository\com\oracle\ojdbc6\12.1.0.2\ojdbc6-12.1.0.2.jar
            -->
            <dependency>
                <groupId>com.oracle</groupId>
                <artifactId>my-ojdbc6</artifactId>
                <version>12.1.0.2</version>
            </dependency>
       </dependencies>
    </dependencyManagement>

    <!--子模块可继承父模块的build-->
    <build>
        <plugins>
            <!--打包时候copy脚本，包括Linux启动脚本，docker相关脚本等-->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!--打包时候复制文件-->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <!--读取打包到target里-->
                            <outputDirectory>${basedir}/target</outputDirectory>
                            <resources>
                                <resource>
                                    <!--指定目录-->
                                    <directory>${basedir}</directory>
                                    <includes>
                                        <!--所有的sh文件。-->
                                        <include>**/*.sh</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--打源码包-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>